/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package TaipeiHot.JazzChat.UI;

import TaipeiHot.JazzChat.Client.Client;
import TaipeiHot.JazzChat.User;
import TaipeiHot.JazzChat.Util;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author Paul
 */
public class InviteFriendWindow extends javax.swing.JFrame {

    /**
     * Creates new form InviteFriendWindow
     */
    Map<String, Integer> nick2Id = new HashMap<String, Integer>();
    private int roomId=0;
    public InviteFriendWindow(int id) {
        initComponents();
        roomId=id;
        friendList.setModel(friend);
        wait.setModel(waitList);

        Iterator<Entry<Integer,User> > it = Client.userSet.entrySet().iterator();
        while (it.hasNext()) {
            User u = it.next().getValue();
            waitList.addElement(u.getNickname());
            nick2Id.put(u.getNickname(),u.id);
        }
        mouseListener3 = new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent mouseEvent) {
                    JList theList = (JList) mouseEvent.getSource();
                    if (mouseEvent.getClickCount() == 2) {
                        int index = theList.locationToIndex(mouseEvent.getPoint());
                        if (index >= 0) {
                            friend.addElement(waitList.getElementAt(index));
                            //waitList.removeElement(index);
                         }
                     }
                }
        };
        wait.addMouseListener(mouseListener3);

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inviteFriendBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        friendList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        wait = new javax.swing.JList();

        inviteFriendBtn.setText("Invite!!");
        inviteFriendBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inviteFriendBtnMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(friendList);

        jScrollPane2.setViewportView(wait);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inviteFriendBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inviteFriendBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inviteFriendBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inviteFriendBtnMouseClicked
        // TODO add your handling code here:
        //addUserToRoom
        setVisible(false);
        for(int i=0;i<friend.getSize();i++){
            Util.errorReport(friend.getElementAt(i).toString());
            Util.errorReport(nick2Id.get(friend.getElementAt(i).toString())+"");
            Client.addUserToRoom(roomId,nick2Id.get(friend.getElementAt(i).toString()));
        }
        
    }//GEN-LAST:event_inviteFriendBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InviteFriendWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InviteFriendWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InviteFriendWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InviteFriendWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InviteFriendWindow(1).setVisible(true);
            }
        });
    }
    DefaultListModel waitList=new DefaultListModel();
    DefaultListModel friend=new DefaultListModel();
    public MouseListener mouseListener3;
    public MouseListener mouseListener2;
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList friendList;
    private javax.swing.JButton inviteFriendBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList wait;
    // End of variables declaration//GEN-END:variables
}
